buildscript {
    repositories {
        jcenter()
    }
//    dependencies {
//        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
//    }
}


plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'fabric-loom' version '0.2.5-SNAPSHOT'
    id 'maven-publish'
}

minecraft {
}

group 'com.github.euonmyoji.yysplayer'
version '0.1.0'

apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    gradlePluginPortal()
}

processResources {
    inputs.property "version", project.version
    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

configurations {
    shade
    compile.extendsFrom(shade)
}

dependencies {
    shade 'org.bytedeco:javacv:1.5.1'
    shade 'org.bytedeco:ffmpeg-platform:4.1.3-1.5.1'

    minecraft "com.mojang:minecraft:1.14.4"
    mappings "net.fabricmc:yarn:1.14.4+build.14"
    modCompile "net.fabricmc:fabric-loader:0.6.3+build.167"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompile "net.fabricmc.fabric-api:fabric-api:0.4.1+build.245-1.14"
}

shadowJar {
    configurations = [project.configurations.shade]
    from sourceSets.main.output
//    classifier = "" .?
}

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            // add all the jars that should be included when publishing to maven
//            artifact(remapJar) {
//                builtBy remapJar
//            }
//            artifact(sourcesJar) {
//                builtBy remapSourcesJar
//            }
//        }
//    }
//
//    // select the repositories you want to publish to
//    repositories {
//        // uncomment to publish to the local maven
//        // mavenLocal()
//    }
//}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.euonmyoji.yysplayer.Main'
    }
    from "LICENSE"
}

shadowJar.mustRunAfter(remapJar)

artifacts {
    archives shadowJar
}
